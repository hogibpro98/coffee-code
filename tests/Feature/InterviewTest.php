<?php

namespace Tests\Feature;

use App\Models\Interview;
use App\Models\TemporaryMember;
use Tests\TestCase;
use Illuminate\Support\Carbon;
use Illuminate\Foundation\Testing\WithoutMiddleware;


class InterviewTest extends TestCase
{
    use WithoutMiddleware;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testStore1()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->post('/api/v1/interview', [
            "temporary_member_id" => $faker->numberBetween(1,50),
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "interview_start_time" => Carbon::now()->format('H:i'),
            "interview_end_time" => null,
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => Carbon::now()->format('Y-m-d H:i:s'),
            "note" => $faker->jobTitle(),
        ]);
        $response->assertStatus(201);
    }

    public function testStore2()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->post('/api/v1/interview', [
            "temporary_member_id" => $faker->numberBetween(1,50),
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "status" => 4,
            "note" => $faker->jobTitle(),
        ]);
        $response->assertStatus(201);
    }

    public function testStoreFailure1()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->post('/api/v1/interview', [
            "temporary_member_id" => $faker->jobTitle(),
            "note" => $faker->jobTitle(),
        ]);
        $response->assertStatus(422);
    }

    public function testStoreFailure2()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->post('/api/v1/interview', [
            "temporary_member_id" => '',
            "note" => $faker->jobTitle(),
        ]);
        $response->assertStatus(422);
    }

    public function testStoreFailure3()
    {
        $response = $this->post('/api/v1/interview', [
            "email_send_time" => Carbon::now()->format('Y-m-d H:i:s'),
        ]);
        $response->assertStatus(422);
    }

    public function testUpdate1()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "temporary_member_id" => $faker->numberBetween(1,50),
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "interview_start_time" => "17:44",
            "interview_end_time" => "19:44",
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => null,
            "note" => $faker->jobTitle(),
            "status" => 1,
            "interviewed" => 0
        ]);
        $response->assertStatus(200);
    }

    public function testUpdate2()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "interview_start_time" => "17:44",
            "interview_end_time" => "19:44",
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => null,
            "note" => $faker->jobTitle(),
            "status" => 0,
            "interviewed" => 1
        ]);
        $response->assertStatus(200);
    }

    public function testUpdate3()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "interview_start_time" => "17:44",
            "interview_end_time" => "19:44",
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => null,
            "note" => $faker->jobTitle(),
            "status" => 0,
            "interviewed" => 1
        ]);
        $response->assertStatus(200);
    }

    public function testUpdate4()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "interview_start_time" => "17:44",
            "interview_end_time" => "19:44",
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => null,
            "note" => $faker->jobTitle(),
            "status" => 1,
            "interviewed" => 1
        ]);
        $response->assertStatus(200);
    }

    public function testUpdateFailure1()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => Carbon::now()->format('d-m-Y'),
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "note" => $faker->jobTitle(),
            "interviewed" => 1,
            "status" => 1,
        ]);
        $response->assertStatus(422);
    }

    public function testUpdateFailure2()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => 1,
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "note" => $faker->jobTitle(),
            "interviewed" => 1,
            "status" => 1,
        ]);
        $response->assertStatus(422);
    }

    public function testUpdateFailure3()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "note" => 1,
            "status" => 1,
        ]);
        $response->assertStatus(422);
    }

    public function testUpdateFailure4()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/999999', [
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => Carbon::now()->format('Y-m-d H:i:s'),
            "note" => $faker->jobTitle(),
            "status" => 1,
        ]);
        $response->assertStatus(404);
    }

    public function testUpdateFailure5()
    {
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "note" => 1,
            "status" => 5,
        ]);
        $response->assertStatus(422);
    }

    public function testUpdateFailure6()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_start_time" => "17:44",
            "interview_end_time" => "19:44",
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => null,
            "note" => $faker->jobTitle(),
            "status" => 1,
            "interviewed" => 1
        ]);
        $response->assertStatus(404);
    }

    public function testUpdateFailure7()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "interview_end_time" => "19:44",
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => null,
            "note" => $faker->jobTitle(),
            "status" => 1,
            "interviewed" => 1
        ]);
        $response->assertStatus(404);
    }

    public function testUpdateFailure8()
    {
        $faker = \Faker\Factory::create('ja_JP');
        $response = $this->put('/api/v1/interview/1', [
            "interview_fixed_date" => Carbon::now()->format('Y-m-d'),
            "interview_start_time" => "17:44",
            "insertion_text_to_mail_template" => $faker->jobTitle(),
            "email_send_time" => null,
            "note" => $faker->jobTitle(),
            "status" => 1,
            "interviewed" => 1
        ]);
        $response->assertStatus(404);
    }

    public function testIndex1()
    {
        $response = $this->get('/api/v1/interview?interview_fixed_date_from=2022-03-10&interview_fixed_date_to=2022-03-31&name=喜嶋 知実&&email=@&status[]=1&time=AM');
        $response->assertStatus(200);
    }

    public function testIndex2()
    {
        $response = $this->get('/api/v1/interview?interview_fixed_date_from=2022-03-10');
        $response->assertStatus(200);
    }
    public function testIndex3()
    {
        $response = $this->get('/api/v1/interview?interview_fixed_date_to=2022-03-31');
        $response->assertStatus(200);
    }

    public function testIndex7()
    {
        $response = $this->get('/api/v1/interview?name=喜嶋 知実');
        $response->assertStatus(200);
    }
    public function testIndex4()
    {
        $response = $this->get('/api/v1/interview?email=@');
        $response->assertStatus(200);
    }
    public function testIndex5()
    {
        $response = $this->get('/api/v1/interview?status[]=1');
        $response->assertStatus(200);
    }

    public function testIndex6()
    {
        $response = $this->get('/api/v1/interview?time=10:10');
        $response->assertStatus(200);
    }
    public function testShow()
    {
        $response = $this->get('/api/v1/interview/1');
        $response->assertStatus(200);
    }

    public function testShowFailure()
    {
        $response = $this->get('/api/v1/interview/999999');
        $response->assertStatus(404);
    }
}
